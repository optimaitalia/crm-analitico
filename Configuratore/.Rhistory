c("Option1","Option2","Other options"), action=callback)
panel <- rp.control()
rp.combo(panel, option, "Pick an option:",
c("Option1","Option2","Other options"), action=callback)
panel <- rp.control()
a=rp.combo(panel, option, "Pick an option:",
c("Option1","Option2","Other options"), action=callback)
a
panel <- rp.control()
rp.combo(panel, option, "Pick an option:",
c("Option1","Option2","Other options"), action=callback)
panel <- rp.control()
rp.combo(panel, option, "Pick an option:",
c("Option1","Option2","Other options"), action=(a=callback))
a
panel$panelname
panel <- rp.control()
rp.combo(panel, option, "Pick an option:",
c("Option1","Option2","Other options"), action=(a=panel$option)
panel <- rp.control()
rp.combo(panel, option, "Pick an option:",
c("Option1","Option2","Other options"), action=(a=panel$option))
panel <- rp.control()
rp.combo(panel, option, "Pick an option:",
c("Option1","Option2","Other options"), action=(a=panel$option))
panel <- rp.control()
rp.combo(panel, option, "Pick an option:",
c("Option1","Option2","Other options"), action=save)
panel <- rp.control()
rp.combo(panel, option, "Pick an option:",
c("Option1","Option2","Other options"), action=save)
panel <- rp.control()
rp.combo(panel, option, "Pick an option:",
c("Option1","Option2","Other options"), action=save(envir=panel))
search()
panel <- rp.control()
rp.combo(panel, option, "Pick an option:",
c("Option1","Option2","Other options"), assing(a))
rp.combo
save=function(panel) {
outwin<-panel$option
panel
invisible(outwin)
}
panel <- rp.control()
rp.combo(panel, option, "Pick an option:",
c("Option1","Option2","Other options"), action=save )
outwin
panel <- rp.control()
rp.combo(panel, option, "Pick an option:",
c("Option1","Option2","Other options"), action=save(panel) )
save=function(panel) {
outwin<-panel$option
invisible(outwin)
}
panel <- rp.control()
rp.combo(panel, option, "Pick an option:",
c("Option1","Option2","Other options"), action=save() )
save=function(panel) {
outwin<-panel
invisible(outwin)
}
panel <- rp.control()
rp.combo(panel, option, "Pick an option:",
c("Option1","Option2","Other options"), action=save(panel$option) )
panel <- rp.control()
rp.combo(panel, option, "Pick an option:",
c("Option1","Option2","Other options"), action=(a=save(panel$option)) )
provas=function(panel) {
outwin<-panel
invisible(outwin)
}
panel <- rp.control()
rp.combo(panel, option, "Pick an option:",
c("Option1","Option2","Other options"), action=(a=provas(panel$option)) )
panel <- rp.control()
rp.combo(panel, option, "Pick an option:",
c("Option1","Option2","Other options"), action=(a=callback) )
a
panel <- rp.control()
rp.combo(panel, option, "Pick an option:",
c("Option1","Option2","Other options"), action=provas )
provas=function(panel) {
outwin<-panel
return(outwin)
}
panel <- rp.control()
rp.combo(panel, option, "Pick an option:",
c("Option1","Option2","Other options"), action=provas )
outwin+
\
outwin
panel <- rp.control()
rp.combo(panel, option, "Pick an option:",
c("Option1","Option2","Other options"), action=(a=provas )
)
a
provas=function(panel) {
outwin<-panel
return(outwin)
}
panel <- rp.control()
rp.combo(panel, option, "Pick an option:",
c("Option1","Option2","Other options"), action=(b=provas )
)
b
provas=function(panel) {
browser()
outwin<-panel
return(outwin)
}
panel <- rp.control()
rp.combo(panel, option, "Pick an option:",
c("Option1","Option2","Other options"), action=provas))
panel <- rp.control()
rp.combo(panel, option, "Pick an option:",
c("Option1","Option2","Other options"), action=provas))
panel <- rp.control()
rp.combo(panel, option, "Pick an option:",
c("Option1","Option2","Other options"), action=provas)
provas=function(panel) {
stop()
outwin<-panel
return(outwin)
}
panel <- rp.control()
rp.combo(panel, option, "Pick an option:",
c("Option1","Option2","Other options"), action=provas)
provas
outwin
density.draw <- function(panel) {
plot(density(panel$y, panel$sp), main = "Density estimate")
panel
}
density.panel <- rp.control("Density estimation", y = Al2O3, sp = r / 8)
rp.slider(density.panel, sp, r / 50, r / 4, density.draw, "Bandwidth")
density.draw <- function(panel) {
plot(density(panel$y, panel$sp), main = "Density estimate")
panel
}
density.panel <- rp.control("Density estimation", y = Al2O3, sp = r / 8)
rp.slider(density.panel, sp, r / 50, r / 4, density.draw, "Bandwidth")
library("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages(shiny)
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
runApp(getwd())
library(shiny)
runApp(getwd())
setwd/()
setwd("../Desktop/Configuratore/")
runApp(getwd())
PI_Perserv= function(obj) (PI_costoServizio(obj)/obj$canoneMese)
cliente=PI_constructor(idCliente="20063",BundleDett=BundleDett)
PI_Perserv(PI_ADSL)
PI_Perserv(PI_ADSL(cliente))
PI_costoServizio(PI_ADSL)
PI_costoServizio(PI_ADSL(cliente))
PI_Perserv= function(obj) round((PI_costoServizio(obj)/sum(PI_costoServizio(obj))),2)
PI_costoServizio(PI_ADSL(cliente))
PI_Perserv(PI_ADSL(cliente))
PI_Perserv= function(obj,obj2) round((PI_costoServizio(obj)/(obj2$CanoneMese),2))
PI_Perserv= function(obj,obj2) round((PI_costoServizio(obj)/(obj2$CanoneMese)),2)
PI_Perserv(PI_ADSL(cliente),cliente)
PI_Perserv= function(obj,obj2) round((PI_costoServizio(obj)/(obj2$CanoneMese)),2) * 100
PI_Perserv(PI_ADSL(cliente),cliente)
cliente
(PI_costoServizio(obj)
(obj2$CanoneMese))
round((PI_costoServizio(obj)/(obj2$CanoneMese)),2)
round((PI_costoServizio(obj)/(obj2$CanoneMese)),2)
obj = CanoneMese
PI_Perserv= function(obj,obj2) round((PI_costoServizio(obj)/(obj2$CanoneMese)),2) * 100
PI_Perserv
PI_Perserv(PI_ADSL(cliente))
PI_Perserv(PI_ADSL(cliente),cliente)
PI_Perserv= function(obj,obj2) round((PI_costoServizio(obj)/(obj2$CanoneMese)),2)
PI_Perserv(PI_ADSL(cliente),cliente)
PI_Perserv(PI_Energia(cliente),cliente)
PI_Perserv= function(obj,obj2) round((PI_costoServizio(obj)/(obj2$CanoneMese)),2) * 100
PI_Perserv(PI_Energia(cliente),cliente)
PI_Perserv(PI_Voce(cliente),cliente)
source('C:/Users/gsirico/Desktop/Configuratore/ScriptClass.R')
source('C:/Users/gsirico/Desktop/Configuratore/ScriptClass.R')
runApp(getwd())
source('C:/Users/gsirico/Desktop/Configuratore/HtmlMethodPannelloidCliente.R')
source('C:/Users/gsirico/Desktop/Configuratore/HtmlMethodPannelloidCliente.R')
source('C:/Users/gsirico/Desktop/Configuratore/HtmlMethodPannelloidCliente.R')
runApp(getwd())
runApp(getwd())
runApp(getwd())
runApp(getwd())
runApp(getwd())
source('C:/Users/gsirico/Desktop/Configuratore/HtmlMethodPannelloidCliente.R')
runApp(getwd())
runApp(getwd())
source('C:/Users/gsirico/Desktop/Configuratore/HtmlMethodPannelloidCliente.R')
runApp(getwd())
source('C:/Users/gsirico/Desktop/Configuratore/HtmlMethodPannelloidCliente.R')
source('C:/Users/gsirico/Desktop/Configuratore/HtmlMethodPannelloidCliente.R')
runApp(getwd())
runApp(getwd())
PI_Perserv= function(obj,obj2) round((PI_costoServizio(obj)/(obj2$CanoneMese)),2) * 100
PI_Perserv(PI_Voce(cliente),cliente)
PI_Voce(cliente)
source('C:/Users/gsirico/Desktop/Configuratore/ScriptClass.R')
source('C:/Users/gsirico/Desktop/Configuratore/ScriptClass.R')
cliente=PI_constructor(idCliente="20063",BundleDett=BundleDett)
source('C:/Users/gsirico/Desktop/Configuratore/ScriptClass.R')
Voce =all[which(all[,"cd_servizio"]==1),]
all=BundleDett[which(BundleDett$cd_cliente==idCliente),]
all[which(all[,"cd_servizio"]==1),]
costoServizioVersoMobili = ifelse(is.na(sum(Voce[which(Voce[,"cd_servizio"]==1 & Voce[,"cd_ramo"]==2),"cd_unitaincluse"]))
,0,sum(Voce[which(Voce[,"cd_servizio"]==1 & Voce[,"cd_ramo"]==2),"cd_unitaincluse"])),
Voce=list(utenza="NULL",
dataAttivazione="NULL",
dataDisattivazione="NULL",
costoServizio = sum(Voce[,"cd_costomese"]),
costoServizioVersoFissi = ifelse(is.na(sum(Voce[which(Voce[,"cd_servizio"]==1 & Voce[,"cd_ramo"]==1),"cd_costomese"]))
,0,sum(Voce[which(Voce[,"cd_servizio"]==1 & Voce[,"cd_ramo"]==1),"cd_costomese"])),
costoServizioVersoMobili = ifelse(is.na(sum(Voce[which(Voce[,"cd_servizio"]==1 & Voce[,"cd_ramo"]==2),"cd_costomese"]))
,0,sum(Voce[which(Voce[,"cd_servizio"]==1 & Voce[,"cd_ramo"]==2),"cd_costomese"])),
minutiVersoFissi=minutiVersoFissi,
minutiVersoMobili=minutiVersoMobili )
Voce =all[which(all[,"cd_servizio"]==1),]
###manca il cli trovare un modo 'per identificarlo.
##manca la data di attivazione
##manca la data di disattivazione da prendere sulla tabella del preodotto.
minutiVersoFissi=ifelse(is.na(sum(Voce[which(Voce[,"cd_servizio"]==1 & Voce[,"cd_ramo"]==1),"cd_unitaincluse"]))
,"flat",sum(Voce[which(Voce[,"cd_servizio"]==1 & Voce[,"cd_ramo"]==1),"cd_unitaincluse"]))
minutiVersoMobili=ifelse(is.na(sum(Voce[which(Voce[,"cd_servizio"]==1 & Voce[,"cd_ramo"]==2),"cd_unitaincluse"]))
,"flat",sum(Voce[which(Voce[,"cd_servizio"]==1 & Voce[,"cd_ramo"]==2),"cd_unitaincluse"]))
Voce=list(utenza="NULL",
dataAttivazione="NULL",
dataDisattivazione="NULL",
costoServizio = sum(Voce[,"cd_costomese"]),
costoServizioVersoFissi = ifelse(is.na(sum(Voce[which(Voce[,"cd_servizio"]==1 & Voce[,"cd_ramo"]==1),"cd_costomese"]))
,0,sum(Voce[which(Voce[,"cd_servizio"]==1 & Voce[,"cd_ramo"]==1),"cd_costomese"])),
costoServizioVersoMobili = ifelse(is.na(sum(Voce[which(Voce[,"cd_servizio"]==1 & Voce[,"cd_ramo"]==2),"cd_costomese"]))
,0,sum(Voce[which(Voce[,"cd_servizio"]==1 & Voce[,"cd_ramo"]==2),"cd_costomese"])),
minutiVersoFissi=minutiVersoFissi,
minutiVersoMobili=minutiVersoMobili )
Voce
class(Voce)
source('C:/Users/gsirico/Desktop/Configuratore/ScriptClass.R')
Voce
Voce =all[which(all[,"cd_servizio"]==1),]
all=BundleDett[which(BundleDett$cd_cliente==idCliente),]
Voce =all[which(all[,"cd_servizio"]==1),]
Voce
Voce=list(utenza="NULL",
dataAttivazione="NULL",
dataDisattivazione="NULL",
costoServizio = sum(Voce[,"cd_costomese"]),
costoServizioVersoFissi = ifelse(is.na(sum(Voce[which(Voce[,"cd_servizio"]==1 & Voce[,"cd_ramo"]==1),"cd_costomese"]))
,0,sum(Voce[which(Voce[,"cd_servizio"]==1 & Voce[,"cd_ramo"]==1),"cd_costomese"])),
costoServizioVersoMobili = ifelse(is.na(sum(Voce[which(Voce[,"cd_servizio"]==1 & Voce[,"cd_ramo"]==2),"cd_costomese"]))
,0,sum(Voce[which(Voce[,"cd_servizio"]==1 & Voce[,"cd_ramo"]==2),"cd_costomese"])),
minutiVersoFissi=minutiVersoFissi,
minutiVersoMobili=minutiVersoMobili )
minutiVersoFissi=ifelse(is.na(sum(Voce[which(Voce[,"cd_servizio"]==1 & Voce[,"cd_ramo"]==1),"cd_unitaincluse"]))
,"flat",sum(Voce[which(Voce[,"cd_servizio"]==1 & Voce[,"cd_ramo"]==1),"cd_unitaincluse"]))
minutiVersoMobili=ifelse(is.na(sum(Voce[which(Voce[,"cd_servizio"]==1 & Voce[,"cd_ramo"]==2),"cd_unitaincluse"]))
,"flat",sum(Voce[which(Voce[,"cd_servizio"]==1 & Voce[,"cd_ramo"]==2),"cd_unitaincluse"]))
Voce=list(utenza="NULL",
dataAttivazione="NULL",
dataDisattivazione="NULL",
costoServizio = sum(Voce[,"cd_costomese"]),
costoServizioVersoFissi = ifelse(is.na(sum(Voce[which(Voce[,"cd_servizio"]==1 & Voce[,"cd_ramo"]==1),"cd_costomese"]))
,0,sum(Voce[which(Voce[,"cd_servizio"]==1 & Voce[,"cd_ramo"]==1),"cd_costomese"])),
costoServizioVersoMobili = ifelse(is.na(sum(Voce[which(Voce[,"cd_servizio"]==1 & Voce[,"cd_ramo"]==2),"cd_costomese"]))
,0,sum(Voce[which(Voce[,"cd_servizio"]==1 & Voce[,"cd_ramo"]==2),"cd_costomese"])),
minutiVersoFissi=minutiVersoFissi,
minutiVersoMobili=minutiVersoMobili )
Voce
class(Voce)="PI_Voce"
source('C:/Users/gsirico/Desktop/Configuratore/ScriptClass.R')
source('C:/Users/gsirico/Desktop/Configuratore/ScriptClass.R')
source('C:/Users/gsirico/Desktop/Configuratore/ScriptClass.R')
cliente=PI_constructor(idCliente="20063",BundleDett=BundleDett)
cliente
PI_voce(cliente)
PI_Voce(cliente)
PI_Perserv(PI_Voce(cliente),cliente)
source('C:/Users/gsirico/Desktop/Configuratore/ScriptClass.R')
source('C:/Users/gsirico/Desktop/Configuratore/ScriptClass.R')
PI_Perserv
PI_Perserv(PI_Voce(cliente),cliente)
source('C:/Users/gsirico/Desktop/Configuratore/ScriptClass.R')
PI_Perserv
PI_Perserv(PI_Voce(cliente),cliente)
cliente=PI_constructor(idCliente="20063",BundleDett=BundleDett)
cliente
source('C:/Users/gsirico/Desktop/Configuratore/ScriptClass.R')
CalcoloPercentuale=
function(obj)
UseMethod("CalcoloPercentuale")
CalcoloPercentuale.PI_Voce = function( obj ){
browser()
}
CalcoloPercentuale.PI_Voce(PI_Voce(cliente))
obj
CalcoloPercentuale.PI_Voce(PI_Voce(cliente),obj2)
CalcoloPercentuale.PI_Voce = function( obj,obj2 ){
browser()
obj
}
CalcoloPercentuale.PI_Voce = function( obj,Canonemese){
browser()
obj
}
obj
CalcoloPercentuale.PI_Voce(PI_Voce(cliente),cliente$CanoneMese)
Q
Q
cliente=PI_constructor(idCliente="11886",BundleDett=BundleDett)
cliente=PI_constructor(idCliente="118886",BundleDett=BundleDett)
cliente
CalcoloPercentuale.PI = function( obj){
browser()
obj
}
CalcoloPercentuale.PI_Voce(cliente)
obj
cliente=PI_constructor(idCliente="20063",BundleDett=BundleDett)
cliente=PI_constructor(idCliente="118886",BundleDett=BundleDett)
CalcoloPercentuale.PI = function( obj){
browser()
obj
}
CalcoloPercentuale.PI_Voce(cliente)
obj
cliente=PI_constructor(idCliente="20066",BundleDett=BundleDett)
cliente=PI_constructor(idCliente="2006",BundleDett=BundleDett)
cliente=PI_constructor(idCliente="200060",BundleDett=BundleDett)
cliente=PI_constructor(idCliente="20066",BundleDett=BundleDett)
runApp(getwd())
source('C:/Users/gsirico/Desktop/Configuratore/HtmlMethodPannelloidCliente.R')
paste('<td class="tg-031e" rowspan=',length(PI_utenza(PI_ADSL(obj))),'>ADSL</td>')
obj=cliente
htlmpage1 =
function(obj)
UseMethod("htlmpage1")
htmlpage1.PI=function(obj){
ut_eng0=PI_utenza(PI_Energia(obj))[1]
ut_eng1 =PI_utenza(PI_Energia(obj))[-1]
un_eng0=PI_unita(PI_Energia(obj))[1]
un_eng1 =PI_unita(PI_Energia(obj))[-1]
return(HTML(c('<style type="text/css">
.tg  {border-collapse:collapse;border-spacing:0;}
.tg td{font-family:Arial, sans-serif;font-size:12px;padding:8px 4px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;}
.tg th{font-family:Arial, sans-serif;font-size:12px;font-weight:normal;padding:8px 4px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;}
.tg .tg-0ord{text-align:right}
.tg .tg-s6z2{text-align:center}
</style>
<table class="tg">
<tr>
<th class="tg-031e"></th>
<th class="tg-031e">Attuale</th>
<th class="tg-031e">Previsto</th>
</tr>
<tr>
<td class="tg-031e">Canone Mese</td>
<td class="tg-031e">',obj$CanoneMese,'</td>
<td class="tg-031e">','?','</td>
</tr>
<tr>
<td class="tg-031e">Conto Relax</td>
<td class="tg-031e">',obj$ContoRelax,'</td>
<td class="tg-031e">','?','</td>
</tr>
<tr>
</tr>
<tr>
<td class="tg-031e">Costo di Attivazione</td>
<td class="tg-s6z2" colspan = 4>',obj$CostoAttivazione,'</td>
</tr>
<tr>
<td class="tg-031e" colspan=5></td>
</tr>
<tr>
<td class="tg-031e" colspan="5">Servizio - Utenza</td>
</tr>
<br>
</br>
<tr>
<th class="tg-031e" colspan="3"></th>
<th class="tg-031e">Peso Percentuale</th>
<th class="tg-031e"> Peso Percentuale Nuovo</th>
</tr>
<tr>
<td class="tg-031e" rowspan="2">Voce</td>
<td class="tg-031e">Minuti Verso Mobili</td>',
paste('<td class="tg-031e">',PI_Voce(obj)$minutiVersoMobili,'</td>',sep=""),
paste('<td class="tg-031e">',PI_Perserv(PI_Voce(cliente),cliente),"%",'</td>',sep=""),
' <td class="tg-031e"></td>
</tr>
<tr>
<td class="tg-031e">Minuti Verso Fissi</td>',
paste('<td class="tg-031e">',PI_Voce(obj)$minutiVersoFissi,'</td>',sep=""),
paste('<td class="tg-031e">',PI_Perserv(PI_Voce(cliente),cliente),"%",'</td>',sep="")
'<td class="tg-031e"></td>
</tr>
<tr>
<td class="tg-031e" colspan="5"></td>
</tr>
<tr>
</tr>
<tr>
<th class="tg-031e" > </th>
<th class="tg-031e">Numero Appoggio </th>
<th class="tg-031e">Profilo</th>
<th class="tg-031e">Peso Percentuale Attuale</th>
<th class="tg-031e">Peso Percentuale Previsto</th>
</tr>
<tr>',
paste('<td class="tg-031e" rowspan=',length(PI_utenza(PI_ADSL(obj))),'>ADSL</td>'),
paste('<td class="tg-031e">',PI_utenza(PI_ADSL(obj))[1],'</td> <td class="tg-031e">',"Manca questo dettaglio",'</td>   <td class="tg-031e"></td>
<td class="tg-031e"></td>
</tr>
',sep=""),
if(length(PI_utenza(PI_ADSL(obj))[-1]>0)){
paste('<tr><td class="tg-031e">',PI_utenza(PI_ADSL(obj))[-1],'</td> <td class="tg-031e">',"Manca questo dettaglio",'</td>   <td class="tg-031e"></td>
<td class="tg-031e"></td>
</tr>
',sep="")
},
'<tr>
</tr>
<tr> <td  colspan=5> </td>
</tr>
<tr>
<td class="tg-031e"></td>
<td class="tg-031e">POD</td>
<td class="tg-031e">Consumo Annuo</td>
<td class="tg-031e"></td>
<td class="tg-031e"></td>
</tr>
<tr>',
paste('<td class="tg-s6z2" rowspan="',length(PI_utenza(PI_Energia(obj))),'">Elettricit&agrave</td>',sep=""),
paste('<td >',ut_eng0,'</td>'),
paste('<td>',un_eng0,'</td>'),
'<td class="tg-031e"></td>
<td class="tg-031e"></td>
</tr>',
if( length(PI_utenza(PI_Energia(obj))[-1])>0){
paste('<tr> <td >',PI_utenza(PI_Energia(obj))[-1],'</td>','<td>',PI_unita(PI_Energia(obj))[-1],'</td><td class="tg-031e"> </td><td class="tg-031e"> </td> </tr> ',sep="")
},
'<td class="tg-031e" colspan="5"></td>
</tr>
<tr>
</tr>
<tr>
<td class="tg-031e"></td>
<td class="tg-031e">PDR</td>
<td class="tg-031e">Consumo Annuo</td>
<td class="tg-031e"></td>
<td class="tg-031e"></td>
</tr>
<tr>',
paste('<td class="tg-s6z2" rowspan="',length(PI_utenza(PI_Gas(obj))),'">GAS</td>',sep=""),
paste('<td >',PI_utenza(PI_Gas(obj))[1],'</td>'),
paste('<td>',PI_unita(PI_Gas(obj))[1],'</td>'),
'<td class="tg-031e"></td>
<td class="tg-031e"></td>
</tr>',
if(length(PI_utenza(PI_Gas(obj))[-1])>0){
paste('<tr> <td >',PI_utenza(PI_Gas(obj))[-1],'</td>','<td>',PI_unita(PI_Gas(obj))[-1],'</td><td class="tg-031e"> </td><td class="tg-031e"> </td> </tr> <tr> <td> </td> </tr> ',sep="")
},
'</table>')
))
}
source('C:/Users/gsirico/Desktop/Configuratore/HtmlMethodPannelloidCliente.R')
source('C:/Users/gsirico/Desktop/Configuratore/HtmlMethodPannelloidCliente.R')
source('C:/Users/gsirico/Desktop/Configuratore/HtmlMethodPannelloidCliente.R')
runApp(getwd())
runApp(getwd())
source('C:/Users/gsirico/Desktop/Configuratore/ScriptClass.R')
cliente=PI_constructor(idCliente="20063",BundleDett=BundleDett)
cliente
obj
obj
PI_ADSL(cliente)
percentualeADSL=PI_ADSL(cliente)
percentualeADSL=PI_costoServizio(PI_ADSL(cliente))
percentualeADSL
percentualeADSL=PI_costoServizio(PI_ADSL(cliente))/cliente$CanoneMese
percentualeADSL=round(PI_costoServizio(PI_ADSL(cliente))/cliente$CanoneMese,2)*100
percentualeADSL
CanoneMese
percentualeADSL=round(PI_costoServizio(PI_ADSL(cliente))/obj$CanoneMese,2)*100
round(PI_costoServizio(PI_ADSL(cliente))/obj$CanoneMese,2)
round(PI_costoServizio(PI_ADSL(cliente))/obj$CanoneMese,2)*100
percentualVoce=round((PI_Voce(cliente))
PI_Voce(cliente)
(PI_Voce(cliente))
percentualVoce
(PI_Voce(cliente))
percentualVoce=[(PI_Voce(cliente)),"costoServizioVersoFissi"]
PI_Voce(cliente)$costoServizioVersoMobili
a$li=NULL
a$li==NULL
length(a$li)
PI_ADSL(obj))==0
PI_ADSL(obj)
